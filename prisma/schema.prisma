// This is your Prisma schema file,
// learn more about it in the docs: https://pris.ly/d/prisma-schema

// Looking for ways to speed up your queries, or scale easily with your serverless or edge functions?
// Try Prisma Accelerate: https://pris.ly/cli/accelerate-init

generator client {
  provider = "prisma-client-js"
}

datasource db {
  provider = "sqlite"
  url      = env("DATABASE_URL")
}

model User {
  id        String    @id @default(uuid())
  email     String    @unique
  password  String
  settings  Settings?
  createdAt DateTime  @default(now())
  updatedAt DateTime  @updatedAt
}

model Client {
  id        String     @id @default(uuid())
  name      String
  email     String     @unique
  phone     String?
  address   String?
  notes     String?
  estimates Estimate[]
  createdAt DateTime   @default(now())
  updatedAt DateTime   @updatedAt
}

model Estimate {
  id            String     @id @default(uuid())
  estimateId    String     @unique // Format: #XX-YYYYMMDD-NN
  clientId      String
  client        Client     @relation(fields: [clientId], references: [id])
  status        String     @default("PENDING") // PENDING, APPROVED, DECLINED
  isDraft       Boolean    @default(true)
  amount        Float
  tax           Float      @default(0)
  taxRate       Float      @default(0)
  subtotal      Float
  date          DateTime   @default(now())
  expiryDate    DateTime?
  notes         String?
  terms         String?
  lineItems     LineItem[]
  createdAt     DateTime   @default(now())
  updatedAt     DateTime   @updatedAt

  @@index([clientId])
  @@index([status])
}

model LineItem {
  id          String    @id @default(uuid())
  estimateId  String
  estimate    Estimate  @relation(fields: [estimateId], references: [id], onDelete: Cascade)
  description String
  quantity    Float
  unitPrice   Float
  amount      Float
  createdAt   DateTime  @default(now())
  updatedAt   DateTime  @updatedAt

  @@index([estimateId])
}

model Item {
  id          String    @id @default(uuid())
  name        String
  description String?
  category    String
  price       Float
  taxable     Boolean   @default(false)
  createdAt   DateTime  @default(now())
  updatedAt   DateTime  @updatedAt
}

model Settings {
  id              String    @id @default(uuid())
  userId          String    @unique
  user            User      @relation(fields: [userId], references: [id])
  businessName    String    @default("")
  email           String    @default("")
  phone           String    @default("")
  address         String    @default("")
  website         String    @default("")
  defaultTaxRate  Float     @default(0)
  estimateExpiry  Int       @default(30)
  invoiceDue      Int       @default(14)
  defaultTerms    String    @default("Payment is due within 14 days of invoice date.")
  defaultNotes    String    @default("Thank you for your business!")
  createdAt       DateTime  @default(now())
  updatedAt       DateTime  @updatedAt

  @@index([userId])
}
